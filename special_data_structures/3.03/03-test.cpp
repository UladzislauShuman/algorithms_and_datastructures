#include <fstream>
#include <vector>
#include <iostream>

int main() {
    /*
    1 : 13
    2 : 1000000000000000000
    */
    std::ifstream in("input2.txt");
    std::ofstream out("output.txt");

    
    /*
    я сначала хотел как-то связать эту задачу со своей
    задачей "Эпидемия"
    но понял, что число вершин в Bk равно 2^k 
    и нас как бы интересует "как n представить в виде суммы степени двоек"
    но ведь -- для этого есть двоичная система И
    каждое натуральное число можно представить в виде степени двоек, при чём степени различны
    т.о.
    задача эквивалентна "все позиции единичек в двоином представлении числа"
    */
   
    unsigned long long n; // чтобы считать 10^18
    in >> n; 
    int i = 0; // 18 * log2(10) < 18 * 4 
    while (n > 0) {
        if (n % 2 == 1) 
            out << i << "\n";
        n >>= 1;
        i++;
    }

    in.close(); out.close();
    return 0;
}